// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Reflection;

using Foundation;
using UIKit;

using MaterialComponents;

namespace MaterialSample
{
	public partial class SamplesListTableViewController : UITableViewController {
		#region Cell Identifier

		static readonly NSString defaultCellId = new NSString (nameof (UITableViewCell));
		static readonly NSString detailedCellId = new NSString ("DetailedTableViewCell");

		#endregion

		#region Properties

		public Component Component { get; set; }

		#endregion

		#region Constructors

		public SamplesListTableViewController (IntPtr handle) : base (handle)
		{
		}

		#endregion

		#region Controller Life Cycle

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			Title = Component.Title;
			TableView.RegisterClassForCellReuse (typeof (UITableViewCell), defaultCellId);
			TableView.SeparatorStyle = UITableViewCellSeparatorStyle.DoubleLineEtched;
		}

		#endregion

		#region UITableView Data Source


		public override nint NumberOfSections (UITableView tableView) => 1;
		public override nint RowsInSection (UITableView tableView, nint section) => Component.Samples.Length + 1;

		public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
		{
			var text = string.Empty;
			var details = string.Empty;

			if (indexPath.Row == 0) {
				var cell = tableView.DequeueReusableCell (detailedCellId) ?? new UITableViewCell (UITableViewCellStyle.Subtitle, detailedCellId);

				cell.SelectionStyle = UITableViewCellSelectionStyle.None;
				cell.TextLabel.Text = "Description";
				cell.TextLabel.Font = Typography.Body2Font;
				cell.TextLabel.Alpha = Typography.Body2FontOpacity;
				cell.DetailTextLabel.Text = Component.Description;
				cell.DetailTextLabel.Lines = 0;
				cell.DetailTextLabel.Font = Typography.Body1Font;
				cell.DetailTextLabel.Alpha = Typography.Body1FontOpacity;
				cell.Accessory = UITableViewCellAccessory.None;

				return cell;
			} else {
				var cell = tableView.DequeueReusableCell (defaultCellId, indexPath);

				var sample = Component.Samples [indexPath.Row - 1];

				cell.Accessory = UITableViewCellAccessory.DisclosureIndicator;
				cell.TextLabel.Text = sample.Title;
				cell.TextLabel.Font = Typography.SubheadFont;
				cell.TextLabel.Alpha = Typography.SubheadFontOpacity;

				return cell;
			}
		}

		#endregion

		#region UITableView Delegate

		public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
		{
			if (indexPath.Row == 0)
				return;

			var sample = Component.Samples [indexPath.Row - 1];
			var viewController = Activator.CreateInstance (null, $"{nameof (MaterialSample)}.{sample.Id}", 
			                                               false, BindingFlags.CreateInstance, 
			                                               null, new [] { sample.Title }, 
			                                               null, null).Unwrap () as UIViewController;

			NavigationController.PushViewController (viewController, true);
		}

		public override nfloat EstimatedHeight (UITableView tableView, NSIndexPath indexPath) => 56;
		public override nfloat GetHeightForRow (UITableView tableView, NSIndexPath indexPath) => UITableView.AutomaticDimension;

		#endregion
	}
}
